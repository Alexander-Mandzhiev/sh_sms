// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.1
// source: apps/clients_apps/clients_apps.proto

package client_apps

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ClientsAppService_Create_FullMethodName = "/apps.client_apps.ClientsAppService/Create"
	ClientsAppService_Get_FullMethodName    = "/apps.client_apps.ClientsAppService/Get"
	ClientsAppService_Update_FullMethodName = "/apps.client_apps.ClientsAppService/Update"
	ClientsAppService_Delete_FullMethodName = "/apps.client_apps.ClientsAppService/Delete"
	ClientsAppService_List_FullMethodName   = "/apps.client_apps.ClientsAppService/List"
)

// ClientsAppServiceClient is the client API for ClientsAppService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ClientsAppServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*ClientApp, error)
	Get(ctx context.Context, in *IdentifierRequest, opts ...grpc.CallOption) (*ClientApp, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*ClientApp, error)
	Delete(ctx context.Context, in *IdentifierRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type clientsAppServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClientsAppServiceClient(cc grpc.ClientConnInterface) ClientsAppServiceClient {
	return &clientsAppServiceClient{cc}
}

func (c *clientsAppServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*ClientApp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ClientApp)
	err := c.cc.Invoke(ctx, ClientsAppService_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsAppServiceClient) Get(ctx context.Context, in *IdentifierRequest, opts ...grpc.CallOption) (*ClientApp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ClientApp)
	err := c.cc.Invoke(ctx, ClientsAppService_Get_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsAppServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*ClientApp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ClientApp)
	err := c.cc.Invoke(ctx, ClientsAppService_Update_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsAppServiceClient) Delete(ctx context.Context, in *IdentifierRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, ClientsAppService_Delete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsAppServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, ClientsAppService_List_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientsAppServiceServer is the server API for ClientsAppService service.
// All implementations must embed UnimplementedClientsAppServiceServer
// for forward compatibility.
type ClientsAppServiceServer interface {
	Create(context.Context, *CreateRequest) (*ClientApp, error)
	Get(context.Context, *IdentifierRequest) (*ClientApp, error)
	Update(context.Context, *UpdateRequest) (*ClientApp, error)
	Delete(context.Context, *IdentifierRequest) (*DeleteResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	mustEmbedUnimplementedClientsAppServiceServer()
}

// UnimplementedClientsAppServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedClientsAppServiceServer struct{}

func (UnimplementedClientsAppServiceServer) Create(context.Context, *CreateRequest) (*ClientApp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedClientsAppServiceServer) Get(context.Context, *IdentifierRequest) (*ClientApp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedClientsAppServiceServer) Update(context.Context, *UpdateRequest) (*ClientApp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedClientsAppServiceServer) Delete(context.Context, *IdentifierRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedClientsAppServiceServer) List(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedClientsAppServiceServer) mustEmbedUnimplementedClientsAppServiceServer() {}
func (UnimplementedClientsAppServiceServer) testEmbeddedByValue()                           {}

// UnsafeClientsAppServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ClientsAppServiceServer will
// result in compilation errors.
type UnsafeClientsAppServiceServer interface {
	mustEmbedUnimplementedClientsAppServiceServer()
}

func RegisterClientsAppServiceServer(s grpc.ServiceRegistrar, srv ClientsAppServiceServer) {
	// If the following call pancis, it indicates UnimplementedClientsAppServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ClientsAppService_ServiceDesc, srv)
}

func _ClientsAppService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsAppServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ClientsAppService_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsAppServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientsAppService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsAppServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ClientsAppService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsAppServiceServer).Get(ctx, req.(*IdentifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientsAppService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsAppServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ClientsAppService_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsAppServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientsAppService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsAppServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ClientsAppService_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsAppServiceServer).Delete(ctx, req.(*IdentifierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientsAppService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsAppServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ClientsAppService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsAppServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ClientsAppService_ServiceDesc is the grpc.ServiceDesc for ClientsAppService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ClientsAppService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "apps.client_apps.ClientsAppService",
	HandlerType: (*ClientsAppServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ClientsAppService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ClientsAppService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ClientsAppService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ClientsAppService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ClientsAppService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apps/clients_apps/clients_apps.proto",
}
