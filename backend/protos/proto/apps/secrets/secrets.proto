syntax = "proto3";

package apps.secrets;
option go_package = "apps.secrets.v1;secrets";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service SecretService {
  rpc CreateSecret(CreateSecretRequest) returns (Secret);
  rpc GetSecret(GetSecretRequest) returns (Secret);
  rpc RotateSecret(RotateSecretRequest) returns (Secret);
  rpc RevokeSecret(RevokeSecretRequest) returns (Secret);
  rpc DeleteSecret(DeleteSecretRequest) returns (google.protobuf.Empty);
  rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse);
}

message Secret {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
  string current_secret = 4;
  string old_secret = 5;
  string algorithm = 6;
  int32 secret_version = 7;
  google.protobuf.Timestamp generated_at = 8;
  google.protobuf.Timestamp revoked_at = 9;
}

// Create
message CreateSecretRequest {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
  string current_secret = 4;
  string algorithm = 5;
}

// Read
message GetSecretRequest {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
}

// Rotate (специальный метод вместо Update)
message RotateSecretRequest {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
  string new_secret = 4;
  string rotated_by = 5;
}

// Revoke
message RevokeSecretRequest {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
}

// Delete
message DeleteSecretRequest {
  string tenant_id = 1;
  int32 app_id = 2;
  string secret_type = 3;
}

// List
message ListSecretsRequest {
  message Filter {
    optional string tenant_id = 1;
    optional int32 app_id = 2;
    optional string secret_type = 3;
    optional bool active_only = 4; // revoked_at IS NULL
  }

  int32 page = 1;
  int32 page_size = 2;
  Filter filter = 3;
}

message ListSecretsResponse {
  repeated Secret secrets = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}