syntax = "proto3";
package sso.roles;
option go_package = "sso.roles.v1;roles";

import "google/protobuf/timestamp.proto";

service RoleService {
  rpc CreateRole (CreateRequest) returns (Role);
  rpc GetRole (GetRequest) returns (Role);
  rpc UpdateRole (UpdateRequest) returns (Role);
  rpc DeleteRole (DeleteRequest) returns (DeleteResponse);
  rpc ListRoles (ListRequest) returns (ListResponse);
}

message Role {
  string id = 1;                    // UUID роли
  string tenant_id = 2;             // UUID арендатора (обязательно)
  string name = 3;
  string description = 4;
  int32 level = 5;                  // Default: 0
  bool is_custom = 6;               // Default: false
  string created_by = 7;            // UUID создателя
  google.protobuf.Timestamp created_at = 8;
  optional google.protobuf.Timestamp deleted_at = 9;
}

message CreateRequest {
  string tenant_id = 1;             // Обязательный tenant
  string name = 2;
  optional string description = 3;
  optional int32 level = 4;         // Default: 0
  optional bool is_custom = 5;      // Default: false
  string created_by = 6;            // UUID пользователя
}

message GetRequest {
  string tenant_id = 1;             // Контекст арендатора
  string id = 2;                    // UUID роли
}

message UpdateRequest {
  string id = 1;
  string tenant_id = 2;             // Для верификации принадлежности
  optional string name = 3;
  optional string description = 4;
  optional int32 level = 5;
  optional bool is_custom = 6;
}

message DeleteRequest {
  string id = 1;
  string tenant_id = 2;             // Подтверждение контекста
}

message DeleteResponse {
  bool success = 1;
  google.protobuf.Timestamp deleted_at = 2;
}

message ListRequest {
  string tenant_id = 1;             // Обязательный фильтр
  int32 page = 2;                   // Номер страницы (начиная с 1)
  int32 page_size = 3;              // Количество элементов (1-100)
  bool include_deleted = 4;         // Включать удаленные
}

message ListResponse {
  repeated Role roles = 1;
  int32 total_count = 2;            // Общее количество
  int32 page = 3;
  int32 page_size = 4;
}