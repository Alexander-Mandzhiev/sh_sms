syntax = "proto3";
package sso.roles;
option go_package = "sso.roles.v1;roles";

import "google/protobuf/timestamp.proto";

service RoleService {
  rpc CreateRole (CreateRequest) returns (Role);
  rpc GetRole (GetRequest) returns (Role);
  rpc UpdateRole (UpdateRequest) returns (Role);
  rpc DeleteRole (DeleteRequest) returns (DeleteResponse);
  rpc ListRoles (ListRequest) returns (ListResponse);
}

message Role {
  string id = 1;
  string name = 2;
  string description = 3;
  int32 level = 4;
  bool is_custom = 5;
  optional string school_id = 6;        // UUID школы в строковом формате
  string created_by = 7;               // UUID создателя
  google.protobuf.Timestamp created_at = 8;
  optional google.protobuf.Timestamp deleted_at = 9; // Для мягкого удаления
}

message CreateRequest {
  string name = 1;
  optional string description = 2;
  optional int32 level = 3;            // Default: 0
  optional bool is_custom = 4;         // Default: false
  optional string school_id = 5;       // Опциональная привязка к школе
  string created_by = 6;               // Обязательный UUID создателя
}

message GetRequest {
  string id = 1;
}

message UpdateRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional int32 level = 4;
  optional bool is_custom = 5;
}

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  bool success = 1;
  google.protobuf.Timestamp deleted_at = 2;
}

message ListRequest {
  int32 page = 1;                      // Номер страницы
  int32 count = 2;                     // Количество элементов
  optional string school_id = 3;       // Фильтр по школе
  bool include_deleted = 4;            // Включать удаленные
}

message ListResponse {
  repeated Role roles = 1;
  int32 total_count = 2;               // Общее количество
  int32 page = 3;
  int32 count = 4;                     // Количество на странице
}