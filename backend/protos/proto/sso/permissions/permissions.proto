syntax = "proto3";
package sso.permission;
option go_package = "sso.permission.v1;permission";

import "google/protobuf/timestamp.proto";

service PermissionService {
  rpc Create (CreateRequest) returns (Permission);
  rpc Get (GetRequest) returns (Permission);
  rpc Update (UpdateRequest) returns (Permission);
  rpc Delete (DeleteRequest) returns (PermissionDeleteResponse);
  rpc List (ListRequest) returns (ListResponse);
}

message Permission {
  string id = 1;                // UUID формата
  string code = 2;              // Уникальный код (пример: "schedule:write")
  string description = 3;
  string category = 4;          // Опциональная категория (пример: "schedule")
  int32 app_id = 5;             // ID приложения (обязательно)
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp deleted_at = 7; // Мягкое удаление
}

message CreateRequest {
  string code = 1;
  string description = 2;
  string category = 3;
  int32 app_id = 4;             // Обязательное поле
}

message GetRequest {
  oneof identifier {
    string id = 1;              // Поиск по UUID
    string code = 2;            // Поиск по коду
  }
}

message UpdateRequest {
  string id = 1;
  string code = 2;
  string description = 3;
  string category = 4;
  int32 app_id = 5;             // Обязательное поле
}

message DeleteRequest {
  string id = 1;
}

message PermissionDeleteResponse {
  bool success = 1;
  google.protobuf.Timestamp deleted_at = 2;
}

message ListRequest {
  int32 page = 1;               // Начинается с 1
  int32 page_size = 2;          // 1-100 элементов
  int32 app_id = 3;             // Фильтр по приложению
  string category = 4;          // Фильтр по категории
  bool include_deleted = 5;     // Включая удаленные
}

message ListResponse {
  repeated Permission permissions = 1;
  int32 total_count = 2;        // Всего записей
  int32 page = 3;
  int32 page_size = 4;
}