syntax = "proto3";
package sso.role_permissions;
option go_package = "sso.role_permissions.v1;role_permissions";

import "google/protobuf/timestamp.proto";

service RolePermissionService {
  rpc AddPermission(RolePermissionRequest) returns (OperationResponse);
  rpc RemovePermission(RolePermissionRequest) returns (OperationResponse);
  rpc ListPermissions(ListRequest) returns (ListResponse);
}

message RolePermissionRequest {
  string client_id = 1;          // Соответствует client_id из БД
  string role_id = 2;            // UUID роли
  string permission_id = 3;      // UUID права
}

message OperationResponse {
  bool success = 1;
  google.protobuf.Timestamp timestamp = 2;
  string message = 3;            // Опциональное сообщение об ошибке/статусе
}

message ListRequest {
  string client_id = 1;          // Обязательный контекст
  string role_id = 2;            // Фильтр по конкретной роли
  int32 page = 3;                // Начинается с 1 (default: 1)
  int32 count = 4;               // 1-200 элементов (default: 50)
  bool include_deleted = 5;      // Включать удаленные связи
}

message ListResponse {
  message PermissionInfo {
    string id = 1;
    string code = 2;             // Например: "calendar:write"
    string category = 3;         // Группировка прав
    google.protobuf.Timestamp assigned_at = 4;
    optional google.protobuf.Timestamp deleted_at = 5;
  }

  repeated PermissionInfo permissions = 1;
  int32 total_count = 2;
  int32 current_page = 3;
  int32 items_per_page = 4;      // Синхронизировано с count из запроса
  bool has_more = 5;             // Признак наличия следующих страниц
}